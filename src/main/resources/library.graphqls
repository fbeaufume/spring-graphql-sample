scalar Date

type Address {
    id: ID!
    street: String
    city: String
    country: String
}

type Author {
    id: ID!
    firstName: String!
    lastName: String!
    address: Address
    books: [Book]
}

enum Language {
  EN
  FR
}

type Book {
    id: ID!
    title: String!
    language: Language!
    isbn: String!
    date: Date!,
    authors: [Author]!
    editor: Editor!
}

type Editor {
    id: ID!
    name: String!
    address : Address
    books: [Book]
}

type Query {
    authors: [Author]

    books(page: Int = 0, size: Int = 3): [Book]
    booksByLanguage(language: Language): [Book]

    editors: [Editor]
}

type Mutation {
    createAuthor(firstName: String!, lastName: String!): Author

    updateBook(id: ID!, title: String!, language: Language!): Boolean
}
